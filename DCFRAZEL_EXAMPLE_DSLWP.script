%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%	______  _____ _     _    _______       _     _   _ _   _   ___   
%	|  _  \/  ___| |   | |  | | ___ \     | |   | | | | \ | | / _ \  
%	| | | |\ `--.| |   | |  | | |_/ /_____| |   | | | |  \| |/ /_\ \ 
%	| | | | `--. \ |   | |/\| |  __/______| |   | | | | . ` ||  _  | 
%	| |/ / /\__/ / |___\  /\  / |         | |___| |_| | |\  || | | | 
%	|___/  \____/\_____/\/  \/\_|         \_____/\___/\_| \_/\_| |_/
%
% ______  _____ ____________  ___   ______ _____ _       _______   _____  _________ _     
% |  _  \/  __ \|  ___| ___ \/ _ \ |___  /|  ___| |     |  ___\ \ / /|  \/  || ___ \ |    
% | | | || /  \/| |_  | |_/ / /_\ \   / / | |__ | |     | |__  \ V / | .  . || |_/ / |    
% | | | || |    |  _| |    /|  _  |  / /  |  __|| |     |  __| /   \ | |\/| ||  __/| |    
% | |/ / | \__/\| |   | |\ \| | | |./ /___| |___| |____ | |___/ /^\ \| |  | || |   | |____
% |___/   \____/\_|   \_| \_\_| |_/\_____/\____/\_____/ \____/\/   \/\_|  |_/\_|   \_____
% 
%
%	General Mission Analysis Tool(GMAT) Script
%	Demonstrating the use of the GMAT function DCFRAZEL calculating
%	Antenna tracking parameters for tracking, receiving and uplinking
%	to the Lunar orbiting Satellite DSLWP-B with respect to 7 distinct
%	Groundstations.
%
%	Created: 2018-12-19 17:27:43 by Sacha Tholl (tholl@fh-aachen.de)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%----------------------------------------
%---------- User-Modified Default Celestial Bodies
%----------------------------------------

GMAT Earth.3DModelScale = 1000;

%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft DSLWP_B;
%copy paste your position and velocity state vector components in ECEF from Tracking station just below.
GMAT DSLWP_B.DateFormat = UTCModJulian;
GMAT DSLWP_B.Epoch = '28460';
GMAT DSLWP_B.CoordinateSystem = EarthFixed;
GMAT DSLWP_B.DisplayStateType = Cartesian;
GMAT DSLWP_B.X = 386341.2702000018;
GMAT DSLWP_B.Y = 6263.660236000196;
GMAT DSLWP_B.Z = -131722.4478;
GMAT DSLWP_B.VX = 0.575069999999952;
GMAT DSLWP_B.VY = -26.86624200000015;
GMAT DSLWP_B.VZ = -0.111435;
%copy paste your position and velocity state vector components in ECEF from Tracking station just above.
GMAT DSLWP_B.DryMass = 45;
GMAT DSLWP_B.Cd = 2.2;
GMAT DSLWP_B.Cr = 1.8;
GMAT DSLWP_B.DragArea = 0.25;
GMAT DSLWP_B.SRPArea = 0.25;
GMAT DSLWP_B.NAIFId = -10001001;
GMAT DSLWP_B.NAIFIdReferenceFrame = -9001001;
GMAT DSLWP_B.OrbitColor = Red;
GMAT DSLWP_B.TargetColor = Teal;
GMAT DSLWP_B.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT DSLWP_B.CdSigma = 1e+070;
GMAT DSLWP_B.CrSigma = 1e+070;
GMAT DSLWP_B.Id = 'SatId';
GMAT DSLWP_B.Attitude = CoordinateSystemFixed;
GMAT DSLWP_B.SPADSRPScaleFactor = 1;
GMAT DSLWP_B.ModelFile = 'aura.3ds';
GMAT DSLWP_B.ModelOffsetX = 0;
GMAT DSLWP_B.ModelOffsetY = 0;
GMAT DSLWP_B.ModelOffsetZ = 0;
GMAT DSLWP_B.ModelRotationX = 0;
GMAT DSLWP_B.ModelRotationY = 0;
GMAT DSLWP_B.ModelRotationZ = 0;
GMAT DSLWP_B.ModelScale = 1;
GMAT DSLWP_B.AttitudeDisplayStateType = 'Quaternion';
GMAT DSLWP_B.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT DSLWP_B.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT DSLWP_B.EulerAngleSequence = '321';

%----------------------------------------
%---------- GroundStations
%----------------------------------------

Create GroundStation DL0FHA;
% DL0FHA is the Main Ground station of the Space Operations Facility of FH Aachen University of 
% Applied Sciences, located at JO30AS. The Yagi array receives and Transmitts in sub-2m (WX & Soyuz) 2m,  
% 70cm. The 3m Dish receives S-Band and X-Band and has S-Band transmit capabilities.
% See Facebook for more details: https://www.facebook.com/FHASOF/
% Twitter: https://twitter.com/fhasof
% Youtube: https://www.youtube.com/channel/UCVVyDe6XZ8opbCRaNJ03Faw
GMAT DL0FHA.OrbitColor = Thistle;
GMAT DL0FHA.TargetColor = DarkGray;
GMAT DL0FHA.CentralBody = Earth;
GMAT DL0FHA.StateType = Spherical;
GMAT DL0FHA.HorizonReference = Sphere;
GMAT DL0FHA.Location1 = 50.77080000000001;
GMAT DL0FHA.Location2 = 6.041700000000001;
GMAT DL0FHA.Location3 = 0.15;
GMAT DL0FHA.Id = 'StationId';
GMAT DL0FHA.IonosphereModel = 'None';
GMAT DL0FHA.TroposphereModel = 'None';
GMAT DL0FHA.DataSource = 'Constant';
GMAT DL0FHA.Temperature = 295.1;
GMAT DL0FHA.Pressure = 1013.5;
GMAT DL0FHA.Humidity = 55;
GMAT DL0FHA.MinimumElevationAngle = 0;

Create GroundStation PI9ESA;
% Ground station PI9ESA is a WebSDR based GS, located at the European Space Research and Technology 
% Centre in Noordwijk (JO22FF), Netherlands. The Antenna receives sub-2m (WX & Soyuz) 2m, 70cm and 23cm
% It is operated by the ESTEC Radio Club PI9ESA. More information about the WebSDR project can be found on 
% https://sites.google.com/site/pi9esa/.
% WebSDR Station is here: http://erc-websdr.esa.int/
GMAT PI9ESA.OrbitColor = Thistle;
GMAT PI9ESA.TargetColor = DarkGray;
GMAT PI9ESA.CentralBody = Earth;
GMAT PI9ESA.StateType = Spherical;
GMAT PI9ESA.HorizonReference = Sphere;
GMAT PI9ESA.Location1 = 52.214817;
GMAT PI9ESA.Location2 = 4.4186238;
GMAT PI9ESA.Location3 = 0.002;
GMAT PI9ESA.Id = 'StationId';
GMAT PI9ESA.IonosphereModel = 'None';
GMAT PI9ESA.TroposphereModel = 'None';
GMAT PI9ESA.DataSource = 'Constant';
GMAT PI9ESA.Temperature = 295.1;
GMAT PI9ESA.Pressure = 1013.5;
GMAT PI9ESA.Humidity = 55;
GMAT PI9ESA.MinimumElevationAngle = 0;

Create GroundStation IO91OF;
% GroundStation IO91OF is a WebSDR based Groundstation suitable for Space craft tracking and have a preset list
% For a lot of amateur Radio related Space crafts. ultimatively they track the ISS voice/APRS and Funcube-1. 
% The Farnham WebSDR is operated by Martin G8JNJ, Noel G8GTZ and Phil M0DNY. They have receivers in 
% LF, &m, 2m 70cm (433, 435, 437)MHz and 3cm
% WebSDR can be reached here: http://farnham-sdr.com/
GMAT IO91OF.OrbitColor = Thistle;
GMAT IO91OF.TargetColor = DarkGray;
GMAT IO91OF.CentralBody = Earth;
GMAT IO91OF.StateType = Spherical;
GMAT IO91OF.HorizonReference = Sphere;
GMAT IO91OF.Location1 = 51.2291667;
GMAT IO91OF.Location2 = 359.208333;
GMAT IO91OF.Location3 = 0.07600000000002183;
GMAT IO91OF.Id = 'StationId';
GMAT IO91OF.IonosphereModel = 'None';
GMAT IO91OF.TroposphereModel = 'None';
GMAT IO91OF.DataSource = 'Constant';
GMAT IO91OF.Temperature = 295.1;
GMAT IO91OF.Pressure = 1013.5;
GMAT IO91OF.Humidity = 55;
GMAT IO91OF.MinimumElevationAngle = 0;

Create GroundStation JJ2YPK;
% This is the Groundstation of Shizuoka Univestity in Japan. The are the owner and operator of the STARS Cubsat fleet
% We have a partnership with em and operate currently STARS-Me and STARS-AO
GMAT JJ2YPK.OrbitColor = Thistle;
GMAT JJ2YPK.TargetColor = DarkGray;
GMAT JJ2YPK.CentralBody = Earth;
GMAT JJ2YPK.StateType = Spherical;
GMAT JJ2YPK.HorizonReference = Sphere;
GMAT JJ2YPK.Location1 = 34.965406;
GMAT JJ2YPK.Location2 = 138.4317;
GMAT JJ2YPK.Location3 = 0.063;
GMAT JJ2YPK.Id = 'StationId';
GMAT JJ2YPK.IonosphereModel = 'None';
GMAT JJ2YPK.TroposphereModel = 'None';
GMAT JJ2YPK.DataSource = 'Constant';
GMAT JJ2YPK.Temperature = 295.1;
GMAT JJ2YPK.Pressure = 1013.5;
GMAT JJ2YPK.Humidity = 55;
GMAT JJ2YPK.MinimumElevationAngle = 0;

Create GroundStation TobiGS;
% This is one of our Student that operates a mobile Groundstation in Netzheim / Germany
GMAT TobiGS.OrbitColor = Thistle;
GMAT TobiGS.TargetColor = DarkGray;
GMAT TobiGS.CentralBody = Earth;
GMAT TobiGS.StateType = Spherical;
GMAT TobiGS.HorizonReference = Sphere;
GMAT TobiGS.Location1 = 47.582306;
GMAT TobiGS.Location2 = 10.626111;
GMAT TobiGS.Location3 = 0.8070000000000001;
GMAT TobiGS.Id = 'StationId';
GMAT TobiGS.IonosphereModel = 'None';
GMAT TobiGS.TroposphereModel = 'None';
GMAT TobiGS.DataSource = 'Constant';
GMAT TobiGS.Temperature = 295.1;
GMAT TobiGS.Pressure = 1013.5;
GMAT TobiGS.Humidity = 55;
GMAT TobiGS.MinimumElevationAngle = 0;

Create GroundStation ZR6AIC;
% ZR6AIC is a Websdr Ground station located in southafrica with a lot of amateur radio Spacecraft and cubsat in their preset list
% The have 2m and 70cm and a lot more. Actually the operate 2 stations, one earth based and oen for space related reception:
% http://zr6aic.giga.co.za:8901/
% http://zr6aic.giga.co.za:8902/
GMAT ZR6AIC.OrbitColor = Thistle;
GMAT ZR6AIC.TargetColor = DarkGray;
GMAT ZR6AIC.CentralBody = Earth;
GMAT ZR6AIC.StateType = Spherical;
GMAT ZR6AIC.HorizonReference = Sphere;
GMAT ZR6AIC.Location1 = -26.2855;
GMAT ZR6AIC.Location2 = 28.070833;
GMAT ZR6AIC.Location3 = 1.627999999998792;
GMAT ZR6AIC.Id = 'StationId';
GMAT ZR6AIC.IonosphereModel = 'None';
GMAT ZR6AIC.TroposphereModel = 'None';
GMAT ZR6AIC.DataSource = 'Constant';
GMAT ZR6AIC.Temperature = 295.1;
GMAT ZR6AIC.Pressure = 1013.5;
GMAT ZR6AIC.Humidity = 55;
GMAT ZR6AIC.MinimumElevationAngle = 0;

Create GroundStation PI9CAM;
% Ground staation PI9CAM is actually the WebSDR connection to the 25meter of diameter Dish Radio Telescope, located in 
% Dwingeloo/The Netherlands. Currently, they are very actively tracking and pointing it towards the moon and the 
% Moon orbiting DSLWP Satellite. ands offered from that are: 6m 2m 70cm. They have a very informative 
% Blog here: https://www.camras.nl/en/
% WEBSDR to be accessed here: http://websdr.camras.nl:8901/
GMAT PI9CAM.OrbitColor = Thistle;
GMAT PI9CAM.TargetColor = DarkGray;
GMAT PI9CAM.CentralBody = Earth;
GMAT PI9CAM.StateType = Spherical;
GMAT PI9CAM.HorizonReference = Sphere;
GMAT PI9CAM.Location1 = 52.8119;
GMAT PI9CAM.Location2 = 6.3961;
GMAT PI9CAM.Location3 = 0;
GMAT PI9CAM.Id = 'PI9CAM';
GMAT PI9CAM.IonosphereModel = 'None';
GMAT PI9CAM.TroposphereModel = 'None';
GMAT PI9CAM.DataSource = 'Constant';
GMAT PI9CAM.Temperature = 295.1;
GMAT PI9CAM.Pressure = 1013.5;
GMAT PI9CAM.Humidity = 55;
GMAT PI9CAM.MinimumElevationAngle = 0;

%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel LunaProp_ForceModel;
GMAT LunaProp_ForceModel.CentralBody = Luna;
GMAT LunaProp_ForceModel.PrimaryBodies = {Luna};
GMAT LunaProp_ForceModel.PointMasses = {Earth, Jupiter, Mars, Neptune, Saturn, Sun, Uranus, Venus};
GMAT LunaProp_ForceModel.Drag = None;
GMAT LunaProp_ForceModel.SRP = On;
GMAT LunaProp_ForceModel.RelativisticCorrection = On;
GMAT LunaProp_ForceModel.ErrorControl = RSSStep;
GMAT LunaProp_ForceModel.GravityField.Luna.Degree = 10;
GMAT LunaProp_ForceModel.GravityField.Luna.Order = 10;
GMAT LunaProp_ForceModel.GravityField.Luna.StmLimit = 100;
GMAT LunaProp_ForceModel.GravityField.Luna.PotentialFile = 'LP165P.cof';
GMAT LunaProp_ForceModel.GravityField.Luna.TideModel = 'None';
GMAT LunaProp_ForceModel.SRP.Flux = 1367;
GMAT LunaProp_ForceModel.SRP.SRPModel = Spherical;
GMAT LunaProp_ForceModel.SRP.Nominal_Sun = 149597870.691;


%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator LunaProp;
GMAT LunaProp.FM = LunaProp_ForceModel;
GMAT LunaProp.Type = PrinceDormand78;
GMAT LunaProp.InitialStepSize = 1;
GMAT LunaProp.Accuracy = 1e-013;
GMAT LunaProp.MinStep = 0;
GMAT LunaProp.MaxStep = 10;
GMAT LunaProp.MaxStepAttempts = 50;
GMAT LunaProp.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem LunaInertial;
GMAT LunaInertial.Origin = Luna;
GMAT LunaInertial.Axes = BodyInertial;

Create CoordinateSystem DSLWP_Sun;
GMAT DSLWP_Sun.Origin = DSLWP_B;
GMAT DSLWP_Sun.Axes = ObjectReferenced;
GMAT DSLWP_Sun.XAxis = R;
GMAT DSLWP_Sun.ZAxis = N;
GMAT DSLWP_Sun.Primary = Sun;
GMAT DSLWP_Sun.Secondary = DSLWP_B;

Create CoordinateSystem LunaICRF;
GMAT LunaICRF.Origin = Luna;
GMAT LunaICRF.Axes = ICRF;

Create CoordinateSystem TopoDL0FHA;
GMAT TopoDL0FHA.Origin = DL0FHA;
GMAT TopoDL0FHA.Axes = Topocentric;

Create CoordinateSystem TopoPI9ESA;
GMAT TopoPI9ESA.Origin = PI9ESA;
GMAT TopoPI9ESA.Axes = Topocentric;

Create CoordinateSystem TopoIO91OF;
GMAT TopoIO91OF.Origin = IO91OF;
GMAT TopoIO91OF.Axes = Topocentric;

Create CoordinateSystem TopoJJ2YPK;
GMAT TopoJJ2YPK.Origin = JJ2YPK;
GMAT TopoJJ2YPK.Axes = Topocentric;

Create CoordinateSystem TopoTobiGS;
GMAT TopoTobiGS.Origin = TobiGS;
GMAT TopoTobiGS.Axes = Topocentric;

Create CoordinateSystem TopoZR6AIC;
GMAT TopoZR6AIC.Origin = TobiGS;
GMAT TopoZR6AIC.Axes = Topocentric;

Create CoordinateSystem TopoPI9CAM;
GMAT TopoPI9CAM.Origin = PI9CAM;
GMAT TopoPI9CAM.Axes = Topocentric;

Create CoordinateSystem LunaEarth;
GMAT LunaEarth.Origin = Luna;
GMAT LunaEarth.Axes = ObjectReferenced;
GMAT LunaEarth.XAxis = R;
GMAT LunaEarth.ZAxis = N;
GMAT LunaEarth.Primary = Earth;
GMAT LunaEarth.Secondary = Luna;

%----------------------------------------
%---------- EventLocators
%----------------------------------------

Create ContactLocator ContactLocator1;
GMAT ContactLocator1.Target = DSLWP_B;
GMAT ContactLocator1.Filename = 'ContactLocator1.txt';
GMAT ContactLocator1.OccultingBodies = {Earth, Luna};
GMAT ContactLocator1.InputEpochFormat = 'TAIModJulian';
GMAT ContactLocator1.InitialEpoch = '21545';
GMAT ContactLocator1.StepSize = 10;
GMAT ContactLocator1.FinalEpoch = '21545.138';
GMAT ContactLocator1.UseLightTimeDelay = true;
GMAT ContactLocator1.UseStellarAberration = true;
GMAT ContactLocator1.WriteReport = true;
GMAT ContactLocator1.RunMode = Automatic;
GMAT ContactLocator1.UseEntireInterval = true;
GMAT ContactLocator1.Observers = {DL0FHA, IO91OF, JJ2YPK, PI9CAM, PI9ESA, TobiGS, ZR6AIC};
GMAT ContactLocator1.LightTimeDirection = Receive;

Create EclipseLocator EclipseLocator1;
GMAT EclipseLocator1.Spacecraft = DSLWP_B;
GMAT EclipseLocator1.Filename = 'EclipseLocator1.txt';
GMAT EclipseLocator1.OccultingBodies = {Earth, Luna};
GMAT EclipseLocator1.InputEpochFormat = 'TAIModJulian';
GMAT EclipseLocator1.InitialEpoch = '21545';
GMAT EclipseLocator1.StepSize = 10;
GMAT EclipseLocator1.FinalEpoch = '21545.138';
GMAT EclipseLocator1.UseLightTimeDelay = true;
GMAT EclipseLocator1.UseStellarAberration = true;
GMAT EclipseLocator1.WriteReport = true;
GMAT EclipseLocator1.RunMode = Automatic;
GMAT EclipseLocator1.UseEntireInterval = true;
GMAT EclipseLocator1.EclipseTypes = {'Umbra', 'Penumbra', 'Antumbra'};

%----------------------------------------
%---------- Subscribers: VIEWS
%----------------------------------------

Create OrbitView CameraView;
GMAT CameraView.SolverIterations = Current;
GMAT CameraView.UpperLeft = [ 0.3311764705882353 0 ];
GMAT CameraView.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT CameraView.RelativeZOrder = 1368;
GMAT CameraView.Maximized = false;
GMAT CameraView.Add = {DSLWP_B, Earth, Luna, Sun};
GMAT CameraView.CoordinateSystem = DSLWP_Sun;
GMAT CameraView.DrawObject = [ false true true true ];
GMAT CameraView.DataCollectFrequency = 1;
GMAT CameraView.UpdatePlotFrequency = 50;
GMAT CameraView.NumPointsToRedraw = 1;
GMAT CameraView.ShowPlot = true;
GMAT CameraView.MaxPlotPoints = 20000;
GMAT CameraView.ShowLabels = true;
GMAT CameraView.ViewPointReference = DSLWP_B;
GMAT CameraView.ViewPointVector = [ 0 0 0 ];
GMAT CameraView.ViewDirection = [ 1 0 0 ];
GMAT CameraView.ViewScaleFactor = 1;
GMAT CameraView.ViewUpCoordinateSystem = DSLWP_Sun;
GMAT CameraView.ViewUpAxis = Z;
GMAT CameraView.EclipticPlane = Off;
GMAT CameraView.XYPlane = Off;
GMAT CameraView.WireFrame = Off;
GMAT CameraView.Axes = Off;
GMAT CameraView.Grid = Off;
GMAT CameraView.SunLine = Off;
GMAT CameraView.UseInitialView = On;
GMAT CameraView.StarCount = 7000;
GMAT CameraView.EnableStars = On;
GMAT CameraView.EnableConstellations = On;

Create OrbitView LunaCentredView;
GMAT LunaCentredView.SolverIterations = Current;
GMAT LunaCentredView.UpperLeft = [ 0 0 ];
GMAT LunaCentredView.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT LunaCentredView.RelativeZOrder = 1373;
GMAT LunaCentredView.Maximized = false;
GMAT LunaCentredView.Add = {DSLWP_B, Luna, Earth, Sun, Jupiter, Mars, Mercury, Neptune, Pluto, Saturn, SolarSystemBarycenter, Uranus, Venus};
GMAT LunaCentredView.CoordinateSystem = LunaICRF;
GMAT LunaCentredView.DrawObject = [ true true true true true true true true true true true true true ];
GMAT LunaCentredView.DataCollectFrequency = 1;
GMAT LunaCentredView.UpdatePlotFrequency = 50;
GMAT LunaCentredView.NumPointsToRedraw = 0;
GMAT LunaCentredView.ShowPlot = true;
GMAT LunaCentredView.MaxPlotPoints = 20000;
GMAT LunaCentredView.ShowLabels = true;
GMAT LunaCentredView.ViewPointReference = Luna;
GMAT LunaCentredView.ViewPointVector = [ 0 0 1000000 ];
GMAT LunaCentredView.ViewDirection = Luna;
GMAT LunaCentredView.ViewScaleFactor = 1;
GMAT LunaCentredView.ViewUpCoordinateSystem = LunaICRF;
GMAT LunaCentredView.ViewUpAxis = Z;
GMAT LunaCentredView.EclipticPlane = Off;
GMAT LunaCentredView.XYPlane = Off;
GMAT LunaCentredView.WireFrame = Off;
GMAT LunaCentredView.Axes = Off;
GMAT LunaCentredView.Grid = Off;
GMAT LunaCentredView.SunLine = Off;
GMAT LunaCentredView.UseInitialView = On;
GMAT LunaCentredView.StarCount = 7000;
GMAT LunaCentredView.EnableStars = On;
GMAT LunaCentredView.EnableConstellations = On;

Create OrbitView EarthLunaView;
GMAT EarthLunaView.SolverIterations = Current;
GMAT EarthLunaView.UpperLeft = [ 0 0.6242905788876277 ];
GMAT EarthLunaView.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT EarthLunaView.RelativeZOrder = 1378;
GMAT EarthLunaView.Maximized = false;
GMAT EarthLunaView.Add = {DSLWP_B, Earth, Luna, Sun};
GMAT EarthLunaView.CoordinateSystem = LunaEarth;
GMAT EarthLunaView.DrawObject = [ true true true true ];
GMAT EarthLunaView.DataCollectFrequency = 1;
GMAT EarthLunaView.UpdatePlotFrequency = 5;
GMAT EarthLunaView.NumPointsToRedraw = 0;
GMAT EarthLunaView.ShowPlot = true;
GMAT EarthLunaView.MaxPlotPoints = 100000;
GMAT EarthLunaView.ShowLabels = true;
GMAT EarthLunaView.ViewPointReference = Luna;
GMAT EarthLunaView.ViewPointVector = [ 36000 -2000 1000 ];
GMAT EarthLunaView.ViewDirection = Earth;
GMAT EarthLunaView.ViewScaleFactor = 1;
GMAT EarthLunaView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT EarthLunaView.ViewUpAxis = -X;
GMAT EarthLunaView.EclipticPlane = Off;
GMAT EarthLunaView.XYPlane = Off;
GMAT EarthLunaView.WireFrame = Off;
GMAT EarthLunaView.Axes = On;
GMAT EarthLunaView.Grid = Off;
GMAT EarthLunaView.SunLine = On;
GMAT EarthLunaView.UseInitialView = Off;
GMAT EarthLunaView.StarCount = 7000;
GMAT EarthLunaView.EnableStars = On;
GMAT EarthLunaView.EnableConstellations = On;

Create OrbitView EarthSeenFromLunaView;
GMAT EarthSeenFromLunaView.SolverIterations = Current;
GMAT EarthSeenFromLunaView.UpperLeft = [ 0 0.2996594778660613 ];
GMAT EarthSeenFromLunaView.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT EarthSeenFromLunaView.RelativeZOrder = 1392;
GMAT EarthSeenFromLunaView.Maximized = false;
GMAT EarthSeenFromLunaView.Add = {DSLWP_B, Earth, Luna, Sun};
GMAT EarthSeenFromLunaView.CoordinateSystem = LunaEarth;
GMAT EarthSeenFromLunaView.DrawObject = [ true true true true ];
GMAT EarthSeenFromLunaView.DataCollectFrequency = 1;
GMAT EarthSeenFromLunaView.UpdatePlotFrequency = 50;
GMAT EarthSeenFromLunaView.NumPointsToRedraw = 0;
GMAT EarthSeenFromLunaView.ShowPlot = true;
GMAT EarthSeenFromLunaView.MaxPlotPoints = 100000;
GMAT EarthSeenFromLunaView.ShowLabels = true;
GMAT EarthSeenFromLunaView.ViewPointReference = Luna;
GMAT EarthSeenFromLunaView.ViewPointVector = [ -350000 0 1000 ];
GMAT EarthSeenFromLunaView.ViewDirection = Earth;
GMAT EarthSeenFromLunaView.ViewScaleFactor = 1;
GMAT EarthSeenFromLunaView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT EarthSeenFromLunaView.ViewUpAxis = -X;
GMAT EarthSeenFromLunaView.EclipticPlane = Off;
GMAT EarthSeenFromLunaView.XYPlane = Off;
GMAT EarthSeenFromLunaView.WireFrame = Off;
GMAT EarthSeenFromLunaView.Axes = On;
GMAT EarthSeenFromLunaView.Grid = Off;
GMAT EarthSeenFromLunaView.SunLine = On;
GMAT EarthSeenFromLunaView.UseInitialView = Off;
GMAT EarthSeenFromLunaView.StarCount = 7000;
GMAT EarthSeenFromLunaView.EnableStars = On;
GMAT EarthSeenFromLunaView.EnableConstellations = On;

%----------------------------------------
%---------- Subscribers GroundTrack-PLOTS
%----------------------------------------

Create GroundTrackPlot EarthGroundTrack;
GMAT EarthGroundTrack.SolverIterations = Current;
GMAT EarthGroundTrack.UpperLeft = [ 0.3311764705882353 0.318955732122588 ];
GMAT EarthGroundTrack.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT EarthGroundTrack.RelativeZOrder = 1363;
GMAT EarthGroundTrack.Maximized = false;
GMAT EarthGroundTrack.Add = {DL0FHA, DSLWP_B, IO91OF, JJ2YPK, PI9CAM, PI9ESA, TobiGS, ZR6AIC};
GMAT EarthGroundTrack.DataCollectFrequency = 1;
GMAT EarthGroundTrack.UpdatePlotFrequency = 50;
GMAT EarthGroundTrack.NumPointsToRedraw = 0;
GMAT EarthGroundTrack.ShowPlot = true;
GMAT EarthGroundTrack.MaxPlotPoints = 20000;
GMAT EarthGroundTrack.CentralBody = Earth;
GMAT EarthGroundTrack.TextureMap = 'ModifiedBlueMarble.jpg';

Create GroundTrackPlot LunaGroundTrack;
GMAT LunaGroundTrack.SolverIterations = Current;
GMAT LunaGroundTrack.UpperLeft = [ 0.3311764705882353 0.6401816118047673 ];
GMAT LunaGroundTrack.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT LunaGroundTrack.RelativeZOrder = 1358;
GMAT LunaGroundTrack.Maximized = false;
GMAT LunaGroundTrack.Add = {DSLWP_B, Earth};
GMAT LunaGroundTrack.DataCollectFrequency = 1;
GMAT LunaGroundTrack.UpdatePlotFrequency = 50;
GMAT LunaGroundTrack.NumPointsToRedraw = 0;
GMAT LunaGroundTrack.ShowPlot = true;
GMAT LunaGroundTrack.MaxPlotPoints = 20000;
GMAT LunaGroundTrack.CentralBody = Luna;
GMAT LunaGroundTrack.TextureMap = 'Moon_HermesCelestiaMotherlode.jpg';

%----------------------------------------
%---------- Subscribers: TrackingFiles
%----------------------------------------

Create ReportFile TrackingFile_DL0FHA;
GMAT TrackingFile_DL0FHA.SolverIterations = Current;
GMAT TrackingFile_DL0FHA.UpperLeft = [ 0.002352941176470588 0.1943181818181818 ];
GMAT TrackingFile_DL0FHA.Size = [ 0.94 0.7670454545454546 ];
GMAT TrackingFile_DL0FHA.RelativeZOrder = 251;
GMAT TrackingFile_DL0FHA.Maximized = false;
GMAT TrackingFile_DL0FHA.Filename = 'TrackingFile_DL0FHA.txt';
GMAT TrackingFile_DL0FHA.Precision = 16;
GMAT TrackingFile_DL0FHA.WriteHeaders = true;
GMAT TrackingFile_DL0FHA.LeftJustify = On;
GMAT TrackingFile_DL0FHA.ZeroFill = On;
GMAT TrackingFile_DL0FHA.FixedWidth = false;
GMAT TrackingFile_DL0FHA.Delimiter = ';';
GMAT TrackingFile_DL0FHA.ColumnWidth = 23;
GMAT TrackingFile_DL0FHA.WriteReport = true;

Create ReportFile TrackingFile_PI9ESA;
GMAT TrackingFile_PI9ESA.SolverIterations = Current;
GMAT TrackingFile_PI9ESA.UpperLeft = [ 0.006781750924784217 0.2034090909090909 ];
GMAT TrackingFile_PI9ESA.Size = [ 0.9451294697903823 0.7761363636363636 ];
GMAT TrackingFile_PI9ESA.RelativeZOrder = 759;
GMAT TrackingFile_PI9ESA.Maximized = true;
GMAT TrackingFile_PI9ESA.Filename = 'TrackingFile_PI9ESA.txt';
GMAT TrackingFile_PI9ESA.Precision = 16;
GMAT TrackingFile_PI9ESA.WriteHeaders = true;
GMAT TrackingFile_PI9ESA.LeftJustify = On;
GMAT TrackingFile_PI9ESA.ZeroFill = On;
GMAT TrackingFile_PI9ESA.FixedWidth = false;
GMAT TrackingFile_PI9ESA.Delimiter = ';';
GMAT TrackingFile_PI9ESA.ColumnWidth = 23;
GMAT TrackingFile_PI9ESA.WriteReport = true;

Create ReportFile TrackingFile_IO91OF;
GMAT TrackingFile_IO91OF.SolverIterations = Current;
GMAT TrackingFile_IO91OF.UpperLeft = [ 0.006781750924784217 0.2034090909090909 ];
GMAT TrackingFile_IO91OF.Size = [ 0.9451294697903823 0.7761363636363636 ];
GMAT TrackingFile_IO91OF.RelativeZOrder = 747;
GMAT TrackingFile_IO91OF.Maximized = true;
GMAT TrackingFile_IO91OF.Filename = 'TrackingFile_IO91OF.txt';
GMAT TrackingFile_IO91OF.Precision = 16;
GMAT TrackingFile_IO91OF.WriteHeaders = true;
GMAT TrackingFile_IO91OF.LeftJustify = On;
GMAT TrackingFile_IO91OF.ZeroFill = On;
GMAT TrackingFile_IO91OF.FixedWidth = false;
GMAT TrackingFile_IO91OF.Delimiter = ';';
GMAT TrackingFile_IO91OF.ColumnWidth = 23;
GMAT TrackingFile_IO91OF.WriteReport = true;

Create ReportFile TrackingFile_JJ2YPK;
GMAT TrackingFile_JJ2YPK.SolverIterations = Current;
GMAT TrackingFile_JJ2YPK.UpperLeft = [ 0.006781750924784217 0.2034090909090909 ];
GMAT TrackingFile_JJ2YPK.Size = [ 0.9451294697903823 0.7761363636363636 ];
GMAT TrackingFile_JJ2YPK.RelativeZOrder = 765;
GMAT TrackingFile_JJ2YPK.Maximized = true;
GMAT TrackingFile_JJ2YPK.Filename = 'TrackingFile_JJ2YPK.txt';
GMAT TrackingFile_JJ2YPK.Precision = 16;
GMAT TrackingFile_JJ2YPK.WriteHeaders = true;
GMAT TrackingFile_JJ2YPK.LeftJustify = On;
GMAT TrackingFile_JJ2YPK.ZeroFill = On;
GMAT TrackingFile_JJ2YPK.FixedWidth = false;
GMAT TrackingFile_JJ2YPK.Delimiter = ';';
GMAT TrackingFile_JJ2YPK.ColumnWidth = 23;
GMAT TrackingFile_JJ2YPK.WriteReport = true;

Create ReportFile TrackingFile_TobiGS;
GMAT TrackingFile_TobiGS.SolverIterations = Current;
GMAT TrackingFile_TobiGS.UpperLeft = [ 0.006781750924784217 0.2034090909090909 ];
GMAT TrackingFile_TobiGS.Size = [ 0.9451294697903823 0.7761363636363636 ];
GMAT TrackingFile_TobiGS.RelativeZOrder = 777;
GMAT TrackingFile_TobiGS.Maximized = true;
GMAT TrackingFile_TobiGS.Filename = 'TrackingFile_TobiGS.txt';
GMAT TrackingFile_TobiGS.Precision = 16;
GMAT TrackingFile_TobiGS.WriteHeaders = true;
GMAT TrackingFile_TobiGS.LeftJustify = On;
GMAT TrackingFile_TobiGS.ZeroFill = On;
GMAT TrackingFile_TobiGS.FixedWidth = false;
GMAT TrackingFile_TobiGS.Delimiter = ';';
GMAT TrackingFile_TobiGS.ColumnWidth = 23;
GMAT TrackingFile_TobiGS.WriteReport = true;

Create ReportFile TrackingFile_ZR6AIC;
GMAT TrackingFile_ZR6AIC.SolverIterations = Current;
GMAT TrackingFile_ZR6AIC.UpperLeft = [ 0.005548705302096177 0.2011363636363636 ];
GMAT TrackingFile_ZR6AIC.Size = [ 0.9438964241676943 0.7738636363636363 ];
GMAT TrackingFile_ZR6AIC.RelativeZOrder = 735;
GMAT TrackingFile_ZR6AIC.Maximized = true;
GMAT TrackingFile_ZR6AIC.Filename = 'TrackingFile_ZR6AIC.txt';
GMAT TrackingFile_ZR6AIC.Precision = 16;
GMAT TrackingFile_ZR6AIC.WriteHeaders = true;
GMAT TrackingFile_ZR6AIC.LeftJustify = On;
GMAT TrackingFile_ZR6AIC.ZeroFill = On;
GMAT TrackingFile_ZR6AIC.FixedWidth = false;
GMAT TrackingFile_ZR6AIC.Delimiter = ';';
GMAT TrackingFile_ZR6AIC.ColumnWidth = 23;
GMAT TrackingFile_ZR6AIC.WriteReport = true;

Create ReportFile TrackingFile_PI9CAM;
GMAT TrackingFile_PI9CAM.SolverIterations = Current;
GMAT TrackingFile_PI9CAM.UpperLeft = [ -0.02823529411764706 0.3337116912599319 ];
GMAT TrackingFile_PI9CAM.Size = [ 0.9435294117647058 0.7741203178206584 ];
GMAT TrackingFile_PI9CAM.RelativeZOrder = 355;
GMAT TrackingFile_PI9CAM.Maximized = true;
GMAT TrackingFile_PI9CAM.Filename = 'TrackingFile_PI9CAM.txt';
GMAT TrackingFile_PI9CAM.Precision = 16;
GMAT TrackingFile_PI9CAM.WriteHeaders = true;
GMAT TrackingFile_PI9CAM.LeftJustify = On;
GMAT TrackingFile_PI9CAM.ZeroFill = On;
GMAT TrackingFile_PI9CAM.FixedWidth = false;
GMAT TrackingFile_PI9CAM.Delimiter = ';';
GMAT TrackingFile_PI9CAM.ColumnWidth = 23;
GMAT TrackingFile_PI9CAM.WriteReport = true;

%----------------------------------------
%---------- Subscribers: ContactReports
%----------------------------------------

Create ReportFile ContactReport_DL0FHA;
GMAT ContactReport_DL0FHA.SolverIterations = Current;
GMAT ContactReport_DL0FHA.UpperLeft = [ 0.09176470588235294 0.02043132803632236 ];
GMAT ContactReport_DL0FHA.Size = [ 0.6664705882352942 0.7559591373439274 ];
GMAT ContactReport_DL0FHA.RelativeZOrder = 1384;
GMAT ContactReport_DL0FHA.Maximized = false;
GMAT ContactReport_DL0FHA.Filename = 'ContactReport_DL0FHA.txt';
GMAT ContactReport_DL0FHA.Precision = 16;
GMAT ContactReport_DL0FHA.WriteHeaders = false;
GMAT ContactReport_DL0FHA.LeftJustify = On;
GMAT ContactReport_DL0FHA.ZeroFill = Off;
GMAT ContactReport_DL0FHA.FixedWidth = true;
GMAT ContactReport_DL0FHA.Delimiter = ' ';
GMAT ContactReport_DL0FHA.ColumnWidth = 23;
GMAT ContactReport_DL0FHA.WriteReport = true;

Create ReportFile ContactReport_PI9ESA;
GMAT ContactReport_PI9ESA.SolverIterations = Current;
GMAT ContactReport_PI9ESA.UpperLeft = [ 0.1011097410604192 0.2045454545454546 ];
GMAT ContactReport_PI9ESA.Size = [ 0.6732429099876696 0.7670454545454546 ];
GMAT ContactReport_PI9ESA.RelativeZOrder = 729;
GMAT ContactReport_PI9ESA.Maximized = true;
GMAT ContactReport_PI9ESA.Filename = 'ContactReport_PI9ESA.txt';
GMAT ContactReport_PI9ESA.Precision = 16;
GMAT ContactReport_PI9ESA.WriteHeaders = false;
GMAT ContactReport_PI9ESA.LeftJustify = On;
GMAT ContactReport_PI9ESA.ZeroFill = Off;
GMAT ContactReport_PI9ESA.FixedWidth = true;
GMAT ContactReport_PI9ESA.Delimiter = ' ';
GMAT ContactReport_PI9ESA.ColumnWidth = 23;
GMAT ContactReport_PI9ESA.WriteReport = true;

Create ReportFile ContactReport_IO91OF;
GMAT ContactReport_IO91OF.SolverIterations = Current;
GMAT ContactReport_IO91OF.UpperLeft = [ 0.1017647058823529 0.2056818181818182 ];
GMAT ContactReport_IO91OF.Size = [ 0.6735294117647059 0.7681818181818182 ];
GMAT ContactReport_IO91OF.RelativeZOrder = 76;
GMAT ContactReport_IO91OF.Maximized = true;
GMAT ContactReport_IO91OF.Filename = 'ContactReport_IO91OF.txt';
GMAT ContactReport_IO91OF.Precision = 16;
GMAT ContactReport_IO91OF.WriteHeaders = false;
GMAT ContactReport_IO91OF.LeftJustify = On;
GMAT ContactReport_IO91OF.ZeroFill = Off;
GMAT ContactReport_IO91OF.FixedWidth = true;
GMAT ContactReport_IO91OF.Delimiter = ' ';
GMAT ContactReport_IO91OF.ColumnWidth = 23;
GMAT ContactReport_IO91OF.WriteReport = true;

Create ReportFile ContactReport_JJ2YPK;
GMAT ContactReport_JJ2YPK.SolverIterations = Current;
GMAT ContactReport_JJ2YPK.UpperLeft = [ 0.1035758323057953 0.2090909090909091 ];
GMAT ContactReport_JJ2YPK.Size = [ 0.6757090012330457 0.7715909090909091 ];
GMAT ContactReport_JJ2YPK.RelativeZOrder = 771;
GMAT ContactReport_JJ2YPK.Maximized = true;
GMAT ContactReport_JJ2YPK.Filename = 'ContactReport_JJ2YPK.txt';
GMAT ContactReport_JJ2YPK.Precision = 16;
GMAT ContactReport_JJ2YPK.WriteHeaders = false;
GMAT ContactReport_JJ2YPK.LeftJustify = On;
GMAT ContactReport_JJ2YPK.ZeroFill = Off;
GMAT ContactReport_JJ2YPK.FixedWidth = true;
GMAT ContactReport_JJ2YPK.Delimiter = ' ';
GMAT ContactReport_JJ2YPK.ColumnWidth = 23;
GMAT ContactReport_JJ2YPK.WriteReport = true;

Create ReportFile ContactReport_TobiGS;
GMAT ContactReport_TobiGS.SolverIterations = Current;
GMAT ContactReport_TobiGS.UpperLeft = [ 0.1035758323057953 0.2090909090909091 ];
GMAT ContactReport_TobiGS.Size = [ 0.6757090012330457 0.7715909090909091 ];
GMAT ContactReport_TobiGS.RelativeZOrder = 783;
GMAT ContactReport_TobiGS.Maximized = true;
GMAT ContactReport_TobiGS.Filename = 'ContactReport_TobiGS.txt';
GMAT ContactReport_TobiGS.Precision = 16;
GMAT ContactReport_TobiGS.WriteHeaders = false;
GMAT ContactReport_TobiGS.LeftJustify = On;
GMAT ContactReport_TobiGS.ZeroFill = Off;
GMAT ContactReport_TobiGS.FixedWidth = true;
GMAT ContactReport_TobiGS.Delimiter = ' ';
GMAT ContactReport_TobiGS.ColumnWidth = 23;
GMAT ContactReport_TobiGS.WriteReport = true;

Create ReportFile ContactReport_ZR6AIC;
GMAT ContactReport_ZR6AIC.SolverIterations = Current;
GMAT ContactReport_ZR6AIC.UpperLeft = [ 0.1035758323057953 0.2090909090909091 ];
GMAT ContactReport_ZR6AIC.Size = [ 0.6757090012330457 0.7715909090909091 ];
GMAT ContactReport_ZR6AIC.RelativeZOrder = 741;
GMAT ContactReport_ZR6AIC.Maximized = true;
GMAT ContactReport_ZR6AIC.Filename = 'ContactReport_ZR6AIC.txt';
GMAT ContactReport_ZR6AIC.Precision = 16;
GMAT ContactReport_ZR6AIC.WriteHeaders = false;
GMAT ContactReport_ZR6AIC.LeftJustify = On;
GMAT ContactReport_ZR6AIC.ZeroFill = Off;
GMAT ContactReport_ZR6AIC.FixedWidth = true;
GMAT ContactReport_ZR6AIC.Delimiter = ' ';
GMAT ContactReport_ZR6AIC.ColumnWidth = 23;
GMAT ContactReport_ZR6AIC.WriteReport = true;

Create ReportFile ContactReport_PI9CAM;
GMAT ContactReport_PI9CAM.SolverIterations = Current;
GMAT ContactReport_PI9CAM.UpperLeft = [ 0.1017647058823529 0.2054483541430193 ];
GMAT ContactReport_PI9CAM.Size = [ 0.6735294117647059 0.7684449489216799 ];
GMAT ContactReport_PI9CAM.RelativeZOrder = 356;
GMAT ContactReport_PI9CAM.Maximized = true;
GMAT ContactReport_PI9CAM.Filename = 'ContactReport_PI9CAM.txt';
GMAT ContactReport_PI9CAM.Precision = 16;
GMAT ContactReport_PI9CAM.WriteHeaders = false;
GMAT ContactReport_PI9CAM.LeftJustify = On;
GMAT ContactReport_PI9CAM.ZeroFill = Off;
GMAT ContactReport_PI9CAM.FixedWidth = true;
GMAT ContactReport_PI9CAM.Delimiter = ' ';
GMAT ContactReport_PI9CAM.ColumnWidth = 23;
GMAT ContactReport_PI9CAM.WriteReport = true;


%----------------------------------------
%---------- Subscribers: Other Reports
%----------------------------------------

Create ReportFile ECIPositionReport;
GMAT ECIPositionReport.SolverIterations = Current;
GMAT ECIPositionReport.UpperLeft = [ 0 0 ];
GMAT ECIPositionReport.Size = [ 0 0 ];
GMAT ECIPositionReport.RelativeZOrder = 0;
GMAT ECIPositionReport.Maximized = false;
GMAT ECIPositionReport.Filename = 'ECIPositionsReport.txt';
GMAT ECIPositionReport.Precision = 16;
GMAT ECIPositionReport.Add = {DSLWP_B.ElapsedSecs, DSLWP_B.UTCGregorian, DSLWP_B.UTCModJulian, DSLWP_B.EarthMJ2000Eq.X, DSLWP_B.EarthMJ2000Eq.Y, DSLWP_B.EarthMJ2000Eq.Z, DSLWP_B.EarthMJ2000Eq.VX, DSLWP_B.EarthMJ2000Eq.VY, DSLWP_B.EarthMJ2000Eq.VZ, DSLWP_B.Earth.Latitude, DSLWP_B.Earth.Longitude, DSLWP_B.Earth.Altitude};
GMAT ECIPositionReport.WriteHeaders = true;
GMAT ECIPositionReport.LeftJustify = On;
GMAT ECIPositionReport.ZeroFill = Off;
GMAT ECIPositionReport.FixedWidth = true;
GMAT ECIPositionReport.Delimiter = ' ';
GMAT ECIPositionReport.ColumnWidth = 23;
GMAT ECIPositionReport.WriteReport = true;

Create ReportFile EarthMoonPos;
GMAT EarthMoonPos.SolverIterations = Current;
GMAT EarthMoonPos.UpperLeft = [ 0.1591187270501836 0.2768903088391906 ];
GMAT EarthMoonPos.Size = [ 0.5991432068543452 0.7987220447284346 ];
GMAT EarthMoonPos.RelativeZOrder = 314;
GMAT EarthMoonPos.Maximized = false;
GMAT EarthMoonPos.Filename = 'EarthMoonPosDSWLP.txt';
GMAT EarthMoonPos.Precision = 16;
GMAT EarthMoonPos.Add = {DSLWP_B.UTCModJulian, Earth.DSLWP_Sun.X, Earth.DSLWP_Sun.Y, Earth.DSLWP_Sun.Z, Luna.DSLWP_Sun.X, Luna.DSLWP_Sun.Y, Luna.DSLWP_Sun.Z};
GMAT EarthMoonPos.WriteHeaders = false;
GMAT EarthMoonPos.LeftJustify = On;
GMAT EarthMoonPos.ZeroFill = Off;
GMAT EarthMoonPos.FixedWidth = true;
GMAT EarthMoonPos.Delimiter = ' ';
GMAT EarthMoonPos.ColumnWidth = 23;
GMAT EarthMoonPos.WriteReport = true;

Create EphemerisFile EphemerisFile1;
GMAT EphemerisFile1.UpperLeft = [ 0 0 ];
GMAT EphemerisFile1.Size = [ 0 0 ];
GMAT EphemerisFile1.RelativeZOrder = 0;
GMAT EphemerisFile1.Maximized = false;
GMAT EphemerisFile1.Spacecraft = DSLWP_B;
GMAT EphemerisFile1.Filename = 'EphemerisFile1.bsp';
GMAT EphemerisFile1.FileFormat = SPK;
GMAT EphemerisFile1.EpochFormat = UTCGregorian;
GMAT EphemerisFile1.InitialEpoch = InitialSpacecraftEpoch;
GMAT EphemerisFile1.FinalEpoch = FinalSpacecraftEpoch;
GMAT EphemerisFile1.StepSize = IntegratorSteps;
GMAT EphemerisFile1.Interpolator = Hermite;
GMAT EphemerisFile1.InterpolationOrder = 7;
GMAT EphemerisFile1.CoordinateSystem = EarthMJ2000Eq;
GMAT EphemerisFile1.OutputFormat = LittleEndian;
GMAT EphemerisFile1.WriteEphemeris = true;


%----------------------------------------
%---------- Subscribers XY-PLOTS
%----------------------------------------

Create XYPlot ElevationPlot;
GMAT ElevationPlot.SolverIterations = Current;
GMAT ElevationPlot.UpperLeft = [ 0.6635294117647059 0.6401816118047673 ];
GMAT ElevationPlot.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT ElevationPlot.RelativeZOrder = 1343;
GMAT ElevationPlot.Maximized = false;
GMAT ElevationPlot.XVariable = DSLWP_B.ElapsedSecs;
GMAT ElevationPlot.YVariables = {El(1), El(2), El(3), El(4), El(5), El(6), El(7)};
GMAT ElevationPlot.ShowGrid = true;
GMAT ElevationPlot.ShowPlot = true;

Create XYPlot DownLinkPlot;
GMAT DownLinkPlot.SolverIterations = Current;
GMAT DownLinkPlot.UpperLeft = [ 0.6635294117647059 0 ];
GMAT DownLinkPlot.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT DownLinkPlot.RelativeZOrder = 1353;
GMAT DownLinkPlot.Maximized = false;
GMAT DownLinkPlot.XVariable = DSLWP_B.UTCModJulian;
GMAT DownLinkPlot.YVariables = {DNLFreq(1), DNLFreq(2), DNLFreq(3), DNLFreq(4), DNLFreq(5), DNLFreq(6), DNLFreq(7), CenterFreqDown};
GMAT DownLinkPlot.ShowGrid = true;
GMAT DownLinkPlot.ShowPlot = true;

Create XYPlot UpLinkPlot;
GMAT UpLinkPlot.SolverIterations = Current;
GMAT UpLinkPlot.UpperLeft = [ 0.6635294117647059 0.318955732122588 ];
GMAT UpLinkPlot.Size = [ 0.3323529411764706 0.3212258796821794 ];
GMAT UpLinkPlot.RelativeZOrder = 1348;
GMAT UpLinkPlot.Maximized = false;
GMAT UpLinkPlot.XVariable = DSLWP_B.UTCModJulian;
GMAT UpLinkPlot.YVariables = {UPLFreq(1), UPLFreq(2), UPLFreq(3), UPLFreq(4), UPLFreq(5), UPLFreq(6), UPLFreq(7), CenterFreqUp};
GMAT UpLinkPlot.ShowGrid = true;
GMAT UpLinkPlot.ShowPlot = true;

%----------------------------------------
%---------- Functions
%----------------------------------------

Create GmatFunction DCFRAZEL;
GMAT DCFRAZEL.FunctionPath = 'C:\GMAT\bin\..\userfunctions\gmat\DCFRAZEL.gmf';

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------

Create Array TotalDurations[1,7] PassBegins[1,7] PassEnds[1,7] ContactBegins[1,7] RS[1,7] RE[1,7] RZ[1,7] VE[1,7] VS[1,7] VZ[1,7];
Create Array Ra[1,7] El[1,7] Az[1,7] DNLFreq[1,7] UPLFreq[1,7];
%-----------------------------------------------------------------
Create Variable A_Input_SimDuration A_Input_TimeInc A_Input_ICFrqDown A_Input_ICFrqUp A_Input_FrqOffset A_ShowViews A_ShowPlots A_ShowGroundTracks A_SpecialEventStart A_SpecialEventStop;
Create Variable CenterFreqDown CenterFreqUp CurrentTime Indx1 Indx2 CurrentRange Elevation Azimuth DownLinkFrequency UpLinkFrequency;
Create Variable ContactBegin1;
Create String NxtContact NextAOS ThisLOS ThisContact Line1 Headers SatelliteName GS_DL0FHA Line2 Line3;
Create String PassDurationText GS_PI9ESA GS_IO91OF GS_JJ2YPK GS_TobiGS GS_ZR6AIC GS_PI9CAM;

%---------------------------------------------
%---------- User Defined Variable Parameters
%---------------------------------------------

GMAT A_Input_SimDuration = 3; %Time parameter defines the total propagation time to be simulated in elapsed days!!
GMAT A_Input_TimeInc = 20;    %This parameter defines the step duration in seconds of each propagator iteration 
GMAT A_Input_ICFrqDown = 435.4; %This is the Centerfrequency of the Satellites Transmitter in MHz
GMAT A_Input_ICFrqUp = 146;     %This is the center frequency of the satellite's Receiver  in MHz
GMAT A_Input_FrqOffset = 0;     %In case there is any offset in MHz
GMAT A_ShowViews = 1; %This parameter defines if all the views are drawn or not during simulation --> 0 means don't plot
GMAT A_ShowPlots = 1; %This parameter defines if all the XY-Plots are polotted or not during simulation --> 0 means don't plot
GMAT A_ShowGroundTracks = 1; %This parameter defines if all the Groundtrack-Plots are polotted or not during simulation --> 0 means don't plot
GMAT A_SpecialEventStart = 28460.87500000002; % in UTC ModJulian
GMAT A_SpecialEventStop = 28462.20833333339;  % in UTC ModJulian
GMAT Indx1 = 0;
GMAT ContactBegin1 = 0;
GMAT NxtContact = 'Next Contact ----->AOS:   ';
GMAT ThisContact = 'This Contact ----> LOS:   ';
GMAT Line1 = '-------------------------------------------------------------------------------------------------------------------------';
GMAT Headers = 'Elapsed Seconds           Time in UTC Gregorian     UTC Modified Julian       Range                     Uplink Frequency          Downlink Frequency        Elevation                 Azimuth';
GMAT SatelliteName = 'DSLWP-B / Longjiang-2 Satellite';
GMAT GS_DL0FHA = '--  DL0FHA Spacecraft Pass Prediction Report --';
GMAT Line2 = '-----------------------------------------------';
GMAT Line3 = '--                                           --';
GMAT PassDurationText = 'Total pass duration in[s]:';
GMAT GS_PI9ESA = '--  PI9ESA Spacecraft Pass Prediction Report --';
GMAT GS_IO91OF = '--  IO91OF Spacecraft Pass Prediction Report --';
GMAT GS_JJ2YPK = '--  JJ2YPK Spacecraft Pass Prediction Report --';
GMAT GS_TobiGS = '--  TobiGS Spacecraft Pass Prediction Report --';
GMAT GS_ZR6AIC = '--  ZR6AIC Spacecraft Pass Prediction Report --';
GMAT GS_PI9CAM = '--  PI9CAM Spacecraft Pass Prediction Report --';



%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;
Toggle CameraView ContactReport_DL0FHA ContactReport_IO91OF ContactReport_JJ2YPK ContactReport_PI9CAM ContactReport_PI9ESA ContactReport_TobiGS ContactReport_ZR6AIC DownLinkPlot EarthMoonPos ECIPositionReport ElevationPlot EphemerisFile1 LunaGroundTrack EarthGroundTrack LunaCentredView EarthSeenFromLunaView EarthLunaView TrackingFile_DL0FHA TrackingFile_IO91OF TrackingFile_JJ2YPK TrackingFile_PI9CAM TrackingFile_PI9ESA TrackingFile_TobiGS TrackingFile_ZR6AIC UpLinkPlot Off;

GMAT CenterFreqDown = A_Input_ICFrqDown + A_Input_FrqOffset;
GMAT CenterFreqUp = A_Input_ICFrqUp + A_Input_FrqOffset;

For Indx2 = 1:1:7;
   GMAT DNLFreq(Indx2) = CenterFreqDown; %Groundstation parmeterset output
   GMAT UPLFreq(Indx2) = CenterFreqUp; %Groundstation parmeterset output
EndFor;

While DSLWP_B.ElapsedDays <= A_Input_SimDuration
   Propagate Synchronized LunaProp(DSLWP_B) {DSLWP_B.ElapsedSecs = A_Input_TimeInc};
   
   BeginScript 'DCFRAZELScript'
      GMAT Indx1 = Indx1 + 1;
      
      If Indx1 == 20
         Toggle EarthMoonPos ECIPositionReport ContactReport_DL0FHA ContactReport_IO91OF ContactReport_JJ2YPK ContactReport_PI9CAM ContactReport_PI9ESA ContactReport_TobiGS ContactReport_ZR6AIC TrackingFile_DL0FHA TrackingFile_IO91OF TrackingFile_JJ2YPK TrackingFile_PI9CAM TrackingFile_PI9ESA TrackingFile_TobiGS TrackingFile_ZR6AIC On;
      EndIf;
      
      If A_ShowViews ~= 0 & Indx1 > 20
         Toggle LunaCentredView EarthSeenFromLunaView EarthLunaView CameraView On;
      EndIf;
      
      If A_ShowPlots ~= 0 & Indx1 > 20
         Toggle ElevationPlot DownLinkPlot UpLinkPlot On;
      EndIf;
      
      If A_ShowGroundTracks ~= 0 & Indx1 > 20
         Toggle EarthGroundTrack LunaGroundTrack On;
      EndIf;
      
      % Uncomment these few lines of the If-clause and update the start ans stop modified Julian times if you want to show a particular event
      GMAT A_SpecialEventStart = 28460.87500000002; % in UTC ModJulian
      GMAT A_SpecialEventStop = 28462.20833333339; % in UTC ModJulian
      
      %-----------------------------------------------------------------------------------------  
      %If DSLWP_B.UTCModJulian >= 28460.87500000002 & DSLWP_B.UTCModJulian <= 28462.20833333339
      %   Toggle XYPlot UpLinkPlot DownLinkPlot XYPlot ElevationPlot On;
      %Else
      %   Toggle XYPlot UpLinkPlot DownLinkPlot XYPlot ElevationPlot Off;
      %EndIf;
      %-----------------------------------------------------------------------------------------
      
      GMAT CurrentTime = DSLWP_B.UTCModJulian;
      
      GMAT RS(1) = DSLWP_B.TopoDL0FHA.X;
      GMAT RE(1) = DSLWP_B.TopoDL0FHA.Y;
      GMAT RZ(1) = DSLWP_B.TopoDL0FHA.Z;
      GMAT VS(1) = DSLWP_B.TopoDL0FHA.VX;
      GMAT VE(1) = DSLWP_B.TopoDL0FHA.VY;
      GMAT VZ(1) = DSLWP_B.TopoDL0FHA.VZ;
      
      GMAT RS(2) = DSLWP_B.TopoPI9ESA.X;
      GMAT RE(2) = DSLWP_B.TopoPI9ESA.Y;
      GMAT RZ(2) = DSLWP_B.TopoPI9ESA.Z;
      GMAT VS(2) = DSLWP_B.TopoPI9ESA.VX;
      GMAT VE(2) = DSLWP_B.TopoPI9ESA.VY;
      GMAT VZ(2) = DSLWP_B.TopoPI9ESA.VZ;
      
      GMAT RS(3) = DSLWP_B.TopoIO91OF.X;
      GMAT RE(3) = DSLWP_B.TopoIO91OF.Y;
      GMAT RZ(3) = DSLWP_B.TopoIO91OF.Z;
      GMAT VS(3) = DSLWP_B.TopoIO91OF.VX;
      GMAT VE(3) = DSLWP_B.TopoIO91OF.VY;
      GMAT VZ(3) = DSLWP_B.TopoIO91OF.VZ;
      
      GMAT RS(4) = DSLWP_B.TopoJJ2YPK.X;
      GMAT RE(4) = DSLWP_B.TopoJJ2YPK.Y;
      GMAT RZ(4) = DSLWP_B.TopoJJ2YPK.Z;
      GMAT VS(4) = DSLWP_B.TopoJJ2YPK.VX;
      GMAT VE(4) = DSLWP_B.TopoJJ2YPK.VY;
      GMAT VZ(4) = DSLWP_B.TopoJJ2YPK.VZ;
      
      GMAT RS(5) = DSLWP_B.TopoTobiGS.X;
      GMAT RE(5) = DSLWP_B.TopoTobiGS.Y;
      GMAT RZ(5) = DSLWP_B.TopoTobiGS.Z;
      GMAT VS(5) = DSLWP_B.TopoTobiGS.VX;
      GMAT VE(5) = DSLWP_B.TopoTobiGS.VY;
      GMAT VZ(5) = DSLWP_B.TopoTobiGS.VZ;
      
      GMAT RS(6) = DSLWP_B.TopoZR6AIC.X;
      GMAT RE(6) = DSLWP_B.TopoZR6AIC.Y;
      GMAT RZ(6) = DSLWP_B.TopoZR6AIC.Z;
      GMAT VS(6) = DSLWP_B.TopoZR6AIC.VX;
      GMAT VE(6) = DSLWP_B.TopoZR6AIC.VY;
      GMAT VZ(6) = DSLWP_B.TopoZR6AIC.VZ;
      
      GMAT RS(7) = DSLWP_B.TopoPI9CAM.X;
      GMAT RE(7) = DSLWP_B.TopoPI9CAM.Y;
      GMAT RZ(7) = DSLWP_B.TopoPI9CAM.Z;
      GMAT VS(7) = DSLWP_B.TopoPI9CAM.VX;
      GMAT VE(7) = DSLWP_B.TopoPI9CAM.VY;
      GMAT VZ(7) = DSLWP_B.TopoPI9CAM.VZ;
      
      For Indx2 = 1:1:7;
         %GMAT doesnt allow to put the function output directly into the forseen array, so I had to put the reentrant array Ra(Indx2) into a scalar:
         GMAT CurrentRange = Ra(Indx2);
         GMAT [CurrentRange, DownLinkFrequency, UpLinkFrequency, Elevation, Azimuth] = DCFRAZEL(RS(Indx2), RE(Indx2), RZ(Indx2), VZ(Indx2), VE(Indx2), VZ(Indx2), CenterFreqDown, CenterFreqUp, CurrentTime, A_Input_TimeInc, Indx1, CurrentRange);
         %Also here GMAT does not allow to put the function output directly into the forseen arrays, so I had to do the following wrap-around:
         GMAT Ra(Indx2) = CurrentRange;
         GMAT DNLFreq(Indx2) = DownLinkFrequency;
         GMAT UPLFreq(Indx2) = UpLinkFrequency;
         GMAT El(Indx2) = Elevation;
         GMAT Az(Indx2) = Azimuth;
      EndFor;
   EndScript;
   
   BeginScript 'ReportingScript'
      %At this time it is not possible to use string variables to name reports programatically, so no for loop can be used :-(
      Report TrackingFile_DL0FHA DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(1) UPLFreq(1) DNLFreq(1) El(2) Az(1);
      Report TrackingFile_PI9ESA DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(2) UPLFreq(2) DNLFreq(2) El(2) Az(2);
      Report TrackingFile_IO91OF DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(3) UPLFreq(3) DNLFreq(3) El(3) Az(3);
      Report TrackingFile_JJ2YPK DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(4) UPLFreq(4) DNLFreq(4) El(4) Az(4);
      Report TrackingFile_TobiGS DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(5) UPLFreq(5) DNLFreq(5) El(5) Az(5);
      Report TrackingFile_ZR6AIC DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(6) UPLFreq(6) DNLFreq(6) El(6) Az(6);
      Report TrackingFile_PI9CAM DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(7) UPLFreq(7) DNLFreq(7) El(7) Az(7);
      
      %ContactReport_DL0FHA
      If Indx1 == 1
         Report ContactReport_DL0FHA Line2;
         Report ContactReport_DL0FHA GS_DL0FHA;
         Report ContactReport_DL0FHA Line2;
         GMAT ContactBegins(1) = 0;
      EndIf;
      
      If El(1,1) >= -0.5 & ContactBegins(1,1) == 0
         GMAT NextAOS = DSLWP_B.UTCGregorian;
         GMAT PassBegins(1) = DSLWP_B.UTCModJulian;
         Report ContactReport_DL0FHA SatelliteName NxtContact NextAOS;
         Report ContactReport_DL0FHA Headers;
         GMAT ContactBegins(1) = 1;
      EndIf;
      
      If El(1,1) >= -0.5 & ContactBegins(1,1) == 1
         Report ContactReport_DL0FHA DSLWP_B.ElapsedSecs DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(1) UPLFreq(1) DNLFreq(1) El(1) Az(1) Indx1;
      EndIf;
      
      If El(1,1) <= -0.5 & ContactBegins(1,1) == 1
         GMAT ThisLOS = DSLWP_B.UTCGregorian;
         GMAT PassEnds(1) = DSLWP_B.UTCModJulian;
         GMAT TotalDurations(1) = (PassEnds(1) - PassBegins(1))* 86164.1;
         Report ContactReport_DL0FHA SatelliteName ThisContact ThisLOS PassDurationText TotalDurations(1);
         Report ContactReport_DL0FHA Line1;
         GMAT ContactBegins(1) = 0;
      EndIf;
      
      %ContactReport_PI9ESA
      If Indx1 == 1
         Report ContactReport_PI9ESA Line2;
         Report ContactReport_PI9ESA GS_PI9ESA;
         Report ContactReport_PI9ESA Line2;
         GMAT ContactBegins(2) = 0;
      EndIf;
      
      If El(1,2) >= -0.5 & ContactBegins(1,2) == 0
         GMAT NextAOS = DSLWP_B.UTCGregorian;
         GMAT PassBegins(2) = DSLWP_B.UTCModJulian;
         Report ContactReport_PI9ESA SatelliteName NxtContact NextAOS;
         Report ContactReport_PI9ESA Headers;
         GMAT ContactBegins(2) = 1;
      EndIf;
      
      If El(1,2) >= -0.5 & ContactBegins(1,2) == 1
         Report ContactReport_PI9ESA DSLWP_B.ElapsedSecs DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(2) UPLFreq(2) DNLFreq(2) El(2) Az(2) Indx1;
      EndIf;
      
      If El(1,2) <= -0.5 & ContactBegins(1,2) == 1
         GMAT ThisLOS = DSLWP_B.UTCGregorian;
         GMAT PassEnds(2) = DSLWP_B.UTCModJulian;
         GMAT TotalDurations(2) = (PassEnds(2) - PassBegins(2))* 86164.1;
         Report ContactReport_PI9ESA SatelliteName ThisContact ThisLOS PassDurationText TotalDurations(2);
         Report ContactReport_PI9ESA Line1;
         GMAT ContactBegins(2) = 0;
      EndIf;
      
      %ContactReport_IO91OF
      If Indx1 == 1
         Report ContactReport_IO91OF Line2;
         Report ContactReport_IO91OF GS_IO91OF;
         Report ContactReport_IO91OF Line2;
         GMAT ContactBegins(3) = 0;
      EndIf;
      
      If El(1,3) >= -0.5 & ContactBegins(1,3) == 0
         GMAT NextAOS = DSLWP_B.UTCGregorian;
         GMAT PassBegins(3) = DSLWP_B.UTCModJulian;
         Report ContactReport_IO91OF SatelliteName NxtContact NextAOS;
         Report ContactReport_IO91OF Headers;
         GMAT ContactBegins(3) = 1;
      EndIf;
      
      If El(1,3) >= -0.5 & ContactBegins(1,3) == 1
         Report ContactReport_IO91OF DSLWP_B.ElapsedSecs DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(3) UPLFreq(3) DNLFreq(3) El(3) Az(3) Indx1;
      EndIf;
      
      If El(1,3) <= -0.5 & ContactBegins(1,3) == 1
         GMAT ThisLOS = DSLWP_B.UTCGregorian;
         GMAT PassEnds(3) = DSLWP_B.UTCModJulian;
         GMAT TotalDurations(3) = (PassEnds(3) - PassBegins(3))* 86164.1;
         Report ContactReport_IO91OF SatelliteName ThisContact ThisLOS PassDurationText TotalDurations(3);
         Report ContactReport_IO91OF Line1;
         GMAT ContactBegins(3) = 0;
      EndIf;
      
      %ContactReport_JJ2YPK
      If Indx1 == 1
         Report ContactReport_JJ2YPK Line2;
         Report ContactReport_JJ2YPK GS_JJ2YPK;
         Report ContactReport_JJ2YPK Line2;
         GMAT ContactBegins(4) = 0;
      EndIf;
      
      If El(1,4) >= -0.5 & ContactBegins(1,4) == 0
         GMAT NextAOS = DSLWP_B.UTCGregorian;
         GMAT PassBegins(4) = DSLWP_B.UTCModJulian;
         Report ContactReport_JJ2YPK SatelliteName NxtContact NextAOS;
         Report ContactReport_JJ2YPK Headers;
         GMAT ContactBegins(4) = 1;
      EndIf;
      
      If El(1,4) >= -0.5 & ContactBegins(1,4) == 1
         Report ContactReport_JJ2YPK DSLWP_B.ElapsedSecs DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(4) UPLFreq(4) DNLFreq(4) El(4) Az(4) Indx1;
      EndIf;
      
      If El(1,4) <= -0.5 & ContactBegins(1,4) == 1
         GMAT ThisLOS = DSLWP_B.UTCGregorian;
         GMAT PassEnds(4) = DSLWP_B.UTCModJulian;
         GMAT TotalDurations(4) = (PassEnds(4) - PassBegins(4))* 86164.1;
         Report ContactReport_JJ2YPK SatelliteName ThisContact ThisLOS PassDurationText TotalDurations(4);
         Report ContactReport_JJ2YPK Line1;
         GMAT ContactBegins(4) = 0;
      EndIf;
      
      %ContactReport_TobiGS
      If Indx1 == 1
         Report ContactReport_TobiGS Line2;
         Report ContactReport_TobiGS GS_TobiGS;
         Report ContactReport_TobiGS Line2;
         GMAT ContactBegins(5) = 0;
      EndIf;
      
      If El(1,5) >= -0.5 & ContactBegins(1,5) == 0
         GMAT NextAOS = DSLWP_B.UTCGregorian;
         GMAT PassBegins(5) = DSLWP_B.UTCModJulian;
         Report ContactReport_TobiGS SatelliteName NxtContact NextAOS;
         Report ContactReport_TobiGS Headers;
         GMAT ContactBegins(5) = 1;
      EndIf;
      
      If El(1,5) >= -0.5 & ContactBegins(1,5) == 1
         Report ContactReport_TobiGS DSLWP_B.ElapsedSecs DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(5) UPLFreq(5) DNLFreq(5) El(5) Az(5) Indx1;
      EndIf;
      
      If El(1,5) <= -0.5 & ContactBegins(1,5) == 1
         GMAT ThisLOS = DSLWP_B.UTCGregorian;
         GMAT PassEnds(5) = DSLWP_B.UTCModJulian;
         GMAT TotalDurations(5) = (PassEnds(5) - PassBegins(5))* 86164.1;
         Report ContactReport_TobiGS SatelliteName ThisContact ThisLOS PassDurationText TotalDurations(5);
         Report ContactReport_TobiGS Line1;
         GMAT ContactBegins(5) = 0;
      EndIf;
      
      %ContactReport_ZR6AIC
      If Indx1 == 1
         Report ContactReport_ZR6AIC Line2;
         Report ContactReport_ZR6AIC GS_ZR6AIC;
         Report ContactReport_ZR6AIC Line2;
         GMAT ContactBegins(6) = 0;
      EndIf;
      
      If El(1,6) >= -0.5 & ContactBegins(1,6) == 0
         GMAT NextAOS = DSLWP_B.UTCGregorian;
         GMAT PassBegins(6) = DSLWP_B.UTCModJulian;
         Report ContactReport_ZR6AIC SatelliteName NxtContact NextAOS;
         Report ContactReport_ZR6AIC Headers;
         GMAT ContactBegins(6) = 1;
      EndIf;
      
      If El(1,6) >= -0.5 & ContactBegins(1,6) == 1
         Report ContactReport_ZR6AIC DSLWP_B.ElapsedSecs DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(6) UPLFreq(6) DNLFreq(6) El(6) Az(6) Indx1;
      EndIf;
      
      If El(1,6) <= -0.5 & ContactBegins(1,6) == 1
         GMAT ThisLOS = DSLWP_B.UTCGregorian;
         GMAT PassEnds(6) = DSLWP_B.UTCModJulian;
         GMAT TotalDurations(6) = (PassEnds(6) - PassBegins(6))* 86164.1;
         Report ContactReport_ZR6AIC SatelliteName ThisContact ThisLOS PassDurationText TotalDurations(6);
         Report ContactReport_ZR6AIC Line1;
         GMAT ContactBegins(6) = 0;
      EndIf;
      
      %ContactReport_PI9CAM
      If Indx1 == 1
         Report ContactReport_PI9CAM Line2;
         Report ContactReport_PI9CAM GS_PI9CAM;
         Report ContactReport_PI9CAM Line2;
         GMAT ContactBegins(7) = 0;
      EndIf;
      
      If El(1,7) >= -0.5 & ContactBegins(1,7) == 0
         GMAT NextAOS = DSLWP_B.UTCGregorian;
         GMAT PassBegins(7) = DSLWP_B.UTCModJulian;
         Report ContactReport_PI9CAM SatelliteName NxtContact NextAOS;
         Report ContactReport_PI9CAM Headers;
         GMAT ContactBegins(7) = 1;
      EndIf;
      
      If El(1,7) >= -0.5 & ContactBegins(1,7) == 1
         Report ContactReport_PI9CAM DSLWP_B.ElapsedSecs DSLWP_B.UTCGregorian DSLWP_B.UTCModJulian Ra(7) UPLFreq(7) DNLFreq(7) El(7) Az(7) Indx1;
      EndIf;
      
      If El(1,7) <= -0.5 & ContactBegins(1,7) == 1
         GMAT ThisLOS = DSLWP_B.UTCGregorian;
         GMAT PassEnds(7) = DSLWP_B.UTCModJulian;
         GMAT TotalDurations(7) = (PassEnds(7) - PassBegins(7))* 86164.1;
         Report ContactReport_PI9CAM SatelliteName ThisContact ThisLOS PassDurationText TotalDurations(7);
         Report ContactReport_PI9CAM Line1;
         GMAT ContactBegins(7) = 0;
      EndIf;
   EndScript;
EndWhile;
