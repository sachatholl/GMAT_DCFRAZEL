%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                     																											   
%   																																																	   
%                       _..._                                                                 																			   
%   _______          .-'_..._''.                                                        .---. DC-Frazel												   
%   \  ___ `'.     .' .'      '.\                                         __.....__     |   | 																			   
%    ' |--.\  \   / .'             _.._                               .-''         '.   |   | An open source GMAT function to evaluate			            
%    | |    \  ' . '             .' .._|.-,.--.                      /     .-''"'-.  `. |   | 																			   
%    | |     |  '| |             | '    |  .-. |    __              /     /________\   \|   | Doppler Corrected Frequencies, Range, Azimuth & Elevation	   
%    | |     |  || |           __| |__  | |  | | .:--.'.  .--------.|                  ||   | 																			   
%    | |     ' .'. '          |__   __| | |  | |/ |   \ | |____    |\    .-------------'|   | of a celestial object with respect to a Groundstation	      
%    | |___.' /'  \ '.          .| |    | |  '- `" __ | |     /   /  \    '-.____...---.|   |																			   
%   /_______.'/    '. `._____.-'/| |    | |      .'.''| |   .'   /    `.             .' |   | 2018 By Dipl.- Ing. Sacha Tholl (tholl@fh-aachen.de)																			   
%   \_______|/       `-.______ / | |    | |     / /   | |_ /    /___    `''-...... -'   '---' 																			   
%                             `  | |    |_|     \ \._,\ '/|         |                         																			   
%                                |_|             `--'  `" |_________|                         																			   
%   																			                                                                                             
%                            																                                                                              
%         																		                                                                                          
%	Given the cartesian Topocentric vector between the position of the spacecraft and the tracking station,															   
% 	the Spacecraft center frequency for TX and RX and the current time, the Up and Downlink Frequency,																	  
% 	the range, the azimuth and the elevation can be calculated between the station and the spacecraft.																	   
%																			                                                                                                
%	Inputs:																		                                                                                          	
%		R_E, R_S, R_Z 		=  Topocentric vector components between spacecraft position relative to the ground station. ie. R = R_sc - R_tracking_station	                  
%		V_E, V_S, V_Z 		=  Topocentric velocity vector components between spacecraft position relative to the ground station.					                              
%		SCFrqUp     		=  Uplink center frequency of the spacecraft										                                                            
%		SCFrqDown   		=  Downlink center frequency of the spacecraft										                                                            
%		CurrentTime  		=  The current time of propagation in UTC modified julian time																				           
%		TimeInc      		=  The time incriment between two consecutive iterations																				                  
%		indx	      		=  The index number of the current iteration (only the 1st matters)																		               
%																														                                                              
%	Reentrant parameter:																											                                                  
%		CurrentRange 		=  The current distance separating the Spacecraft from the ground station																		         
%																														  											                             
% 	Outputs:																												  											                           
%		UpLinkFrequency   =  The doppler corrected Uplink Frequency to the spacecraft																			               
%		DownLinkFrequency =  The doppler corrected downlinklink Frequency from the spacecraft																		         
%     Azimuth		  	   =  Azimuth angle between ground station and spacecraft in dec. degrees																		              	 
%     Elevation	 	   =  Elevation angle between ground station and spacecraft in decimal degrees						                                       
%                																																													   
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	




function [CurrentRange, UpLinkFrequency, DownLinkFrequency, Elevation, Azimuth] = DCFRAZEL(R_S, R_E, R_Z, V_S, V_E, V_Z, SCFrqUp, SCFrqDown, CurrentTime, TimeInc, indx, CurrentRange)							

Create Variable pi RootSE PreviousRange CurrentRange DeltaRange;
Create Variable DeltaTime dRange_over_dTime; 
Create Variable FrequencyDown FrequencyUp DownLinkFrequency UpLinkFrequency SpeedOfLight DopplerShiftDown DopplerShiftUp sinEL cosEL;
Create Variable ATAN2_EL Elevation sinAZ cosAZ ATAN2_AZ Azimuth;
Create Variable MAGVsez;
GMAT SpeedOfLight = 299792.458;

BeginMissionSequence;
	pi = acos(-1); % this results in 3.14159265359... 
	GMAT MAGVsez = sqrt(V_S^2 + V_E^2 + V_Z^2);
	GMAT PreviousRange = CurrentRange;
	GMAT CurrentRange = sqrt(R_S^2 + R_E^2 + R_Z^2);

	%----------- DopplerShift calculation -------------------

	GMAT DeltaTime = TimeInc; %in previous version, I calculated delta time of each iter and 
	%                          came to the conclusion to better use a fix increment.
	
	If indx == 1
		GMAT PreviousRange = CurrentRange - (MAGVsez*TimeInc);
		DownLinkFrequency = SCFrqDown;
		GMAT UpLinkFrequency = SCFrqUp;
	EndIf;
	
	GMAT DeltaRange = CurrentRange - PreviousRange;
	GMAT dRange_over_dTime = DeltaRange / DeltaTime;
	GMAT FrequencyDown = SCFrqDown;
	GMAT FrequencyUp = SCFrqUp;
	GMAT DopplerShiftDown = (FrequencyDown * dRange_over_dTime) / SpeedOfLight;
	GMAT DownLinkFrequency = FrequencyDown - DopplerShiftDown;

	GMAT DopplerShiftUp = (FrequencyUp * dRange_over_dTime) / SpeedOfLight;
	GMAT UpLinkFrequency = FrequencyUp + DopplerShiftUp;

	%----------- Elevation calculation -----------------------

	GMAT Elevation = RadToDeg(asin(R_Z/CurrentRange));

	%----------- Azimuth calculation -------------------------

	GMAT RootSE = sqrt(R_S^2 + R_E^2);
	GMAT sinAZ = R_E/RootSE;
	GMAT cosAZ = (-R_S)/RootSE;
	GMAT ATAN2_AZ = atan2(sinAZ,cosAZ);
	
	If ATAN2_AZ < 0
		GMAT ATAN2_AZ = ATAN2_AZ + 2 * pi;
	EndIf;
	
	GMAT Azimuth = RadToDeg(ATAN2_AZ);
